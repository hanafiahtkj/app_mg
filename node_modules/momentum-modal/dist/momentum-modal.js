import { ref as r, computed as c, shallowRef as y, watch as m, defineAsyncComponent as M, h as C, nextTick as L, defineComponent as b } from "vue";
import { usePage as E, router as I } from "@inertiajs/vue3";
import v from "axios";
const f = r(), h = {
  setResolveCallback: (e) => {
    f.value = e;
  },
  resolve: (e) => f.value(e)
}, A = {
  install(e, a) {
    h.setResolveCallback(a.resolve);
  }
}, t = c(() => {
  var e, a;
  return (a = (e = E()) == null ? void 0 : e.props) == null ? void 0 : a.modal;
}), R = c(() => {
  var e;
  return (e = t.value) == null ? void 0 : e.props;
}), d = c(() => {
  var e;
  return (e = t.value) == null ? void 0 : e.key;
}), n = r(), s = y(), p = r(!1), i = r(), u = r(), U = (e) => {
  Object.entries(e).forEach(
    ([a, o]) => ["post", "put", "patch", "delete"].forEach((l) => {
      v.defaults.headers[l][a] = o;
    })
  );
}, X = () => {
  ["X-Inertia-Modal-Key", "X-Inertia-Modal-Redirect"].forEach(
    ([a, o]) => ["get", "post", "put", "patch", "delete"].forEach((l) => {
      delete v.defaults.headers[l][a];
    })
  );
}, g = () => {
  var e, a;
  U({
    "X-Inertia-Modal-Key": d.value,
    "X-Inertia-Modal-Redirect": (e = t.value) == null ? void 0 : e.redirectURL
  }), v.defaults.headers.get["X-Inertia-Modal-Redirect"] = ((a = t.value) == null ? void 0 : a.redirectURL) ?? "";
}, k = () => {
  p.value = !1, X();
}, w = () => {
  var e, a, o, l;
  if (u.value == ((e = t.value) == null ? void 0 : e.nonce) || !((a = t.value) != null && a.component))
    return k();
  n.value != ((o = t.value) == null ? void 0 : o.component) && (n.value = t.value.component, n.value ? s.value = M(() => h.resolve(n.value)) : s.value = !1), u.value = (l = t.value) == null ? void 0 : l.nonce, i.value = s.value ? C(s.value, {
    key: d.value,
    ...R.value
  }) : "", L(() => p.value = !0);
};
w();
typeof window < "u" && window.addEventListener("popstate", (e) => {
  u.value = null;
});
m(
  t,
  () => {
    var e;
    ((e = t.value) == null ? void 0 : e.nonce) !== u.value && w();
  },
  { deep: !0 }
);
m(d, g);
const x = () => {
  var a, o;
  var e = ((a = t.value) == null ? void 0 : a.redirectURL) ?? ((o = t.value) == null ? void 0 : o.baseURL);
  if (i.value = !1, !!e)
    return I.visit(e, {
      preserveScroll: !0,
      preserveState: !0
    });
}, H = () => ({
  show: p,
  vnode: i,
  close: k,
  redirect: x,
  props: R
}), N = b({
  setup() {
    const { vnode: e } = H();
    return () => e.value;
  }
});
export {
  N as Modal,
  A as modal,
  H as useModal
};
